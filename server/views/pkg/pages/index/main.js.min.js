define('pages/index/main', function(require, exports, module) {

  /**
   * main
   * @require 'pages/index/index.scss' // 无需在页面中控制 css
   */
  
  var localAjax = require('localAjax');
  
  var getUrlParam = function(name) {
      var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
      var r = window.location.search.substr(1).match(reg); //匹配目标参数
      if (r != null) {
          return unescape(r[2]);
      }
      return null; //返回参数值
  };
  
  var searchBar = require('search-bar');
  var pageMenu = require('page-menu');
  var dialog = require('dialog');
  var banner2 = require('banner-2');
  var banner3 = require('banner-3');
  var slider = require('slider');
  var tab = require('tab');
  var panel3 = require('panel-3');
  // var tpl = require('./index.tpl');
  
  // window.r 用于判断是否使用浏览器端拉数据渲染，有r且含有值则使用浏览器端渲染
  window.r = getUrlParam('r');
  
  var page = {
      $el: $('body'),
  
      init: function() {
          this._renderData();
      },
  
      _renderData: function() {
          var self = this;
          if (window.r) {
              self._ajaxData();
          } else {
              self._initComponent();
              self._bindEvent();
          }
      },
  
      _ajaxData: function() {
          var self = this;
          $.localAjax({
              url: '../mock/indexPage.json',
              method: 'get',
              dataType: 'json',
              data: {},
              done: function(data) {
                  self._initComponent(data.result);
                  self._bindEvent(data.result);
              },
              fail: function(msg) {
                  dialog.init();
              }
          });
      },
  
      _initComponent: function(data) {
  
          searchBar.init(data && data.keywords);
          pageMenu.init(data && data.pageMenu);
  
          slider.init(data && data.slider);
          banner2.init(data && data.banner2);
          banner3.init(data && data.banner3);
  
          tab.init(data && data.tabs);
          panel3.init(data && data.panel3);
  
      },
  
      _bindEvent: function(data) {
  
          var self = this;
          self.$el.on('click', '[data-href]', function() {
              /**
               * 按需加载处理方式
               */
              // window.location.href = $(this).data('href');
  
              // 按需异步模块测试
              require.async(['testMod'], function(Mod) {
                  Mod.init();
              });
              require.async(['testMod1'], function(Mod) {
                  Mod.init();
              });
          });
      }
  };
  
  module.exports = page;

});
;define('localAjax', function(require, exports, module) {

  /**
   * @author: ouvenzhang
   * @localAjax 函数，带有localstorage功能
   * @example
   * 注意回调中需要使用done，fail来处理请求成功与失败情况，原有ajax的success和error函数无效
   */
  (function(root, factory) {
       if (typeof define === 'function' && define.amd) {
          // AMD
          define(['zepto', './localStorage', './md5'], factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'), require('localStorage'), require('md5'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['localAjax'] = factory(root['Zepto'], root['localData'], root['md5']);
      }
  
  })(this, function($) {
  
      /**
       * 结合ajax获取请求数据
       * @param  {[type]} opts [description]
       * @return {[type]}      [description]
       */
      var exports = function(opts) {
  
          var defaults = $.extend(opts, {
              success: function(data) {
                  opts.done && opts.done(data);
  
                  /**
                   * 延时存储数据，按照cgi的md5作为key存入localstorage
                   */
                  setTimeout(function() {
                      try {
                          $.localData.set($.md5(opts.url), JSON.stringify(data));
                      } catch (e) {
                          console.info(e.msg)
                      }
                  }, 3000);
              },
              error: function(msg) {
                  try {
  
                      /**
                       * 失败时尝试获取本地数据进行渲染，按照cgi的md5作为key存入localstorage
                       */
                      var data = JSON.parse($.localData.get($.md5(opts.url)));
                      opts.done && opts.done(data);
                  } catch (e) {
                      opts.fail && opts.fail(msg);
                      console.info(e.msg)
                  }
              }
          });
          $.ajax(defaults);
      };
  
      $.localAjax = exports;
      return exports;
  });
  

});
;define('search-bar', function(require, exports, module) {

  
  'use strict';
  var labelList = require('label-list');
  
  var searchBar = {
      $el: $('#ui-search-bar'),
      init: function(data) {
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          labelList.init(data);
      },
  
      _ajaxData: function() {
  
      },
  
      _bindEvent: function() {
          var self = this;
          this.$el.on('click', '.ui-searchbar', function(){
              self.$el.addClass('focus');
              self.$el.find('.ui-searchbar-input input').focus();
              $('#ui-label-panel').addClass('show');
          });
          this.$el.on('click', '.ui-searchbar-cancel', function(){
              self.$el.removeClass('focus');
              $('#ui-label-panel').removeClass('show');
          });
      }
  }
  
  module.exports = searchBar;

});
;define('page-menu', function(require, exports, module) {

  
  /**
      indicator   boolean true    指示点
      autopaly    boolean false   自动播放
      interval    int 2000ms  自动播放间隔时间
      duration    int 300ms   切换动画过渡时间
      bounce  boolean true    反弹动画
      beforeScrollStart   function    function(){}    滑动开始前调用（参数：来源页from、切换页to）
      scrollEnd   function    function(){}    滑动结束时调用（参数：当前页 curPage）
      enable()    function    -   全局开关，开启滚动
      disable()   function    -   全局开关，禁止滚动
      refresh()   function    -   刷新当前位置
      destroy()   function    -   销毁对象
   */
  
  var menuTpl = require('page-menu.tpl');
  
  
  var slider = {
      $el: $('#ui-page-menu'),
  
      init: function (data) {
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function (data) {
          this.$el.find('#ui-slider-content').html(menuTpl({pageMenu: data}));
      },
  
      _bindEvent: function () {
  
          var slider = new fz.Scroll('#ui-page-menu', {
              role: 'slider',
              indicator: true,
              autoplay: true,
              interval: 30000
          });
  
          slider.on('beforeScrollStart', function (from, to) {
              console.log(from, to);
          });
  
          slider.on('scrollEnd', function (curPage) {
              console.log(curPage);
          });
      }
  };
  
  module.exports = slider;
  

});
;define('dialog', function(require, exports, module) {

  
  /**
   *  title   string  ''  浮层标题，用来填充模板
      content string  ''  浮层内容，用来填充模板
      button  array   ['确认']  浮层底部按钮的文字数组，建议不超过两个，与callback的index相互对应
      select  int 0   需要高亮的按钮索引（与button相互对应），高亮的按钮会添加类名select
      allowScroll bool    false   弹窗弹出后是否允许页面滚动
      callback    funtion function(){}    点击底部按钮后的回调函数，可以通过函数的第一个参数来获取点击的按钮索引（与button对应）
      animation   string  'pop'   弹窗弹出的动画类名，会自动为弹窗外层加上该类名
      end function    function(){}    弹窗弹出后或者消失后的回调，可以通过函数第一个参数来获取状态（'show'为弹出后，'hide'为消失后）
   */
  'use strict';
  
  var dialog = {
      $el: $('#ui-dialog'),
      init: function() {
  
          this._renderData();
          this._bindEvent();
      },
  
      _renderData: function() {
          this._ajaxData();
      },
  
      _ajaxData: function() {
  
      },
  
      _bindEvent: function() {
          var $dialog = this.$el.dialog('show');
  
          $dialog.on("dialog:action",function(e){
              alert(1)
          });
          $dialog.on("dialog:hide",function(e){
              alert(2)
          });
          var dia = $.dialog({
              title: '温馨提示',
              content: '温馨提示内容',
              button: ["确认", "取消"]
          });
  
      }
  }
  
  module.exports = dialog;
  

});
;define('banner-2', function(require, exports, module) {

  
  /**
      content string  ''  提示内容，用来填充模板
      stayTime    int 1000    提示停留时间，过了这个时间自动隐藏，设置0则不自动隐藏
      type    string  'info'  提示类型，可选info|warn|success
      callback    funtion function(){}    回调函数，第一个参数指示回调类型，目前有两种show|hide
   */
  var bannerTpl = require('banner-2.tpl');
  
  var tips = {
      $el: $('#ui-banner-2'),
  
      init: function(data) {
  
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          this.$el.html(bannerTpl({banner2: data}));
      },
  
  
      _bindEvent: function() {
      }
  }
  
  module.exports = tips;
  

});
;define('banner-3', function(require, exports, module) {

  
  /**
      content string  ''  提示内容，用来填充模板
      stayTime    int 1000    提示停留时间，过了这个时间自动隐藏，设置0则不自动隐藏
      type    string  'info'  提示类型，可选info|warn|success
      callback    funtion function(){}    回调函数，第一个参数指示回调类型，目前有两种show|hide
   */
  var bannerTpl = require('banner-3.tpl');
  
  var tips = {
      $el: $('#ui-banner-3'),
  
      init: function(data) {
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          this.$el.html(bannerTpl({banner3: data}));
      },
  
  
      _bindEvent: function() {
      }
  }
  
  module.exports = tips;
  

});
;define('slider', function(require, exports, module) {

  
  /**
      indicator   boolean true    指示点
      autopaly    boolean false   自动播放
      interval    int 2000ms  自动播放间隔时间
      duration    int 300ms   切换动画过渡时间
      bounce  boolean true    反弹动画
      beforeScrollStart   function    function(){}    滑动开始前调用（参数：来源页from、切换页to）
      scrollEnd   function    function(){}    滑动结束时调用（参数：当前页 curPage）
      enable()    function    -   全局开关，开启滚动
      disable()   function    -   全局开关，禁止滚动
      refresh()   function    -   刷新当前位置
      destroy()   function    -   销毁对象
   */
  
  var sliderTpl = require('slider.tpl');
  
  var slider = {
      $el: $('#ui-slider'),
  
      init: function(data) {
          if(window.r){
  
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          this.$el.find('.ui-slider-content').html(sliderTpl({slider: data}));
      },
  
      _bindEvent: function() {
          var slider = new fz.Scroll('#ui-slider', {
              role: 'slider',
              indicator: true,
              autoplay: true,
              interval: 30000
          });
  
          slider.on('beforeScrollStart', function(from, to) {
              console.log(from, to);
          });
  
          slider.on('scrollEnd', function(curPage) {
              console.log(curPage);
          });
      }
  }
  
  module.exports = slider;
  

});
;define('tab', function(require, exports, module) {

  
  /**
      autopaly    boolean false   自动播放
      interval    int 2000ms  自动播放间隔时间
      duration    int 300ms   切换动画过渡时间
      bounce  boolean true    反弹动画
      beforeScrollStart   function    function(){}    滑动开始前调用（参数：来源页from、切换页to）
      scrollEnd   function    function(){}    滑动结束时调用（参数：当前页 curPage）
      enable()    function    -   全局开关，开启滚动
      disable()   function    -   全局开关，禁止滚动
      refresh()   function    -   刷新当前位置
      destroy()   function    -   销毁对象
   */
  
  var recmendList = require('tab-recmend');
  var moreList = require('tab-more');
  
  var hasLoaded = false;
  var tab = {
      $el: $('.ui-tab'),
      model: {},
      
      init: function(data) {
          this.model = data;
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          recmendList.init(data && data.recmendList);
      },
  
      _bindEvent: function() {
          var self = this;
          var $tab = new fz.Scroll('.ui-tab', {
              role: 'tab',
              autoplay: false,
              interval: 3000
          });
  
          /* 滑动开始前 */
          $tab.on('beforeScrollStart', function(from, to) {
              // from 为当前页，to 为下一页
          })
  
          /* 滑动结束 */
          $tab.on('scrollEnd', function(curPage) {
              // curPage 当前页
              switch(curPage){
                  case 1:
                      moreList.init(self.model && self.model.moreList);
                      break;
                  case 0:
                      recmendList.init(self.model && self.model.recmendList);
                      break;
                  default:
                      break;
              }
          });
      }
  }
  
  module.exports = tab;
  

});
;define('panel-3', function(require, exports, module) {

  
  /**
      content string  ''  提示内容，用来填充模板
      stayTime    int 1000    提示停留时间，过了这个时间自动隐藏，设置0则不自动隐藏
      type    string  'info'  提示类型，可选info|warn|success
      callback    funtion function(){}    回调函数，第一个参数指示回调类型，目前有两种show|hide
   */
  
  var panelTpl = require('panel-3.tpl');
  var tips = {
      $el: $('#ui-panel-3'),
  
      init: function(data) {
          if (window.r) {
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          this.$el.html(panelTpl({panel3: data}))
      },
  
      _ajaxData: function() {
  
      },
  
      _bindEvent: function() {
      }
  }
  
  module.exports = tips;
  

});
;define('localStorage', function(require, exports, module) {

  /**
   * localstorage: 使用全局localData调用
   */
  
  (function(root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define('zepto', factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['localData'] = factory(root['Zepto']);
      }
  
  })(this, function($) {
  
      var rkey = /^[0-9A-Za-z_@-]*$/;
      var store;
  
      function init() {
          if (typeof store == 'undefined') {
              store = window['localStorage'];
          }
          return true;
      }
  
      function isValidKey(key) {
          if (typeof key != 'string') {
              return false;
          }
          return rkey.test(key);
      }
  
      var exports = {
          set:function (key, value) {
              var success = false;
              if (isValidKey(key) && init()) {
                  try {
                      value += '';
                      store.setItem(key, value);
                      success = true;
                  } catch (e) {}
              }
              return success;
          },
          get:function (key) {
              if (isValidKey(key) && init()) {
                  try {
                      return store.getItem(key);
                  } catch (e) {}
              }
              return null;
          },
          remove:function (key) {
              if (isValidKey(key) && init()) {
                  try {
                      store.removeItem(key);
                      return true;
                  } catch (e) {}
              }
              return false;
          },
          clear : function () {
              if (init()) {
                  try {
                      for (var o in store) {
                          store.removeItem(o);
                      }
                      return true;
                  } catch (e) {}
              }
              return false;
          }
      };
      $.localData = exports;
      return exports;
  });
  

});
;define('md5', function(require, exports, module) {

  /*
   * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
   * Digest Algorithm, as defined in RFC 1321.
   * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
   * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
   * Distributed under the BSD License
   * See http://pajhome.org.uk/crypt/md5 for more info.
   */
  
  /*
   * Configurable variables. You may need to tweak these to be compatible with
   * the server-side, but the defaults work in most cases.
   */
  (function(root, factory) {
      if (typeof define === 'function' && define.amd) {
          // AMD
          define(['zepto'], factory);
      } else if (typeof exports === 'object') {
          // Node, CommonJS之类的
          module.exports = factory(require('zepto'));
      } else {
          // 浏览器全局变量(root 即 window)
          root['md5'] = factory(root['Zepto']);
      }
  
  })(this, function($) {
      var exports = $;
      var hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */
      var b64pad = ""; /* base-64 pad character. "=" for strict RFC compliance   */
      var chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode      */
  
      /*
       * These are the functions you'll usually want to call
       * They take string arguments and return either hex or base-64 encoded strings
       */
      function hex_md5(s) {
          return binl2hex(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function b64_md5(s) {
          return binl2b64(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function str_md5(s) {
          return binl2str(core_md5(str2binl(s), s.length * chrsz));
      }
  
      function hex_hmac_md5(key, data) {
          return binl2hex(core_hmac_md5(key, data));
      }
  
      function b64_hmac_md5(key, data) {
          return binl2b64(core_hmac_md5(key, data));
      }
  
      function str_hmac_md5(key, data) {
          return binl2str(core_hmac_md5(key, data));
      }
  
      /*
       * Perform a simple self-test to see if the VM is working
       */
      function md5_vm_test() {
          return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
      }
  
      /*
       * Calculate the MD5 of an array of little-endian words, and a bit length
       */
      function core_md5(x, len) {
          /* append padding */
          x[len >> 5] |= 0x80 << ((len) % 32);
          x[(((len + 64) >>> 9) << 4) + 14] = len;
  
          var a = 1732584193;
          var b = -271733879;
          var c = -1732584194;
          var d = 271733878;
  
          for (var i = 0; i < x.length; i += 16) {
              var olda = a;
              var oldb = b;
              var oldc = c;
              var oldd = d;
  
              a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
              d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
              c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
              b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
              a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
              d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
              c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
              b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
              a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
              d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
              c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
              b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
              a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
              d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
              c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
              b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
  
              a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
              d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
              c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
              b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
              a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
              d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
              c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
              b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
              a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
              d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
              c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
              b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
              a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
              d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
              c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
              b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
  
              a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
              d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
              c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
              b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
              a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
              d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
              c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
              b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
              a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
              d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
              c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
              b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
              a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
              d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
              c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
              b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
  
              a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
              d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
              c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
              b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
              a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
              d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
              c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
              b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
              a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
              d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
              c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
              b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
              a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
              d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
              c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
              b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
  
              a = safe_add(a, olda);
              b = safe_add(b, oldb);
              c = safe_add(c, oldc);
              d = safe_add(d, oldd);
          }
          return Array(a, b, c, d);
  
      }
  
      /*
       * These functions implement the four basic operations the algorithm uses.
       */
      function md5_cmn(q, a, b, x, s, t) {
          return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
      }
  
      function md5_ff(a, b, c, d, x, s, t) {
          return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
      }
  
      function md5_gg(a, b, c, d, x, s, t) {
          return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
      }
  
      function md5_hh(a, b, c, d, x, s, t) {
          return md5_cmn(b ^ c ^ d, a, b, x, s, t);
      }
  
      function md5_ii(a, b, c, d, x, s, t) {
          return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
      }
  
      /*
       * Calculate the HMAC-MD5, of a key and some data
       */
      function core_hmac_md5(key, data) {
          var bkey = str2binl(key);
          if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
  
          var ipad = Array(16),
              opad = Array(16);
          for (var i = 0; i < 16; i++) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
          }
  
          var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
          return core_md5(opad.concat(hash), 512 + 128);
      }
  
      /*
       * Add integers, wrapping at 2^32. This uses 16-bit operations internally
       * to work around bugs in some JS interpreters.
       */
      function safe_add(x, y) {
          var lsw = (x & 0xFFFF) + (y & 0xFFFF);
          var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
          return (msw << 16) | (lsw & 0xFFFF);
      }
  
      /*
       * Bitwise rotate a 32-bit number to the left.
       */
      function bit_rol(num, cnt) {
          return (num << cnt) | (num >>> (32 - cnt));
      }
  
      /*
       * Convert a string to an array of little-endian words
       * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
       */
      function str2binl(str) {
          var bin = Array();
          var mask = (1 << chrsz) - 1;
          for (var i = 0; i < str.length * chrsz; i += chrsz)
              bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);
          return bin;
      }
  
      /*
       * Convert an array of little-endian words to a string
       */
      function binl2str(bin) {
          var str = "";
          var mask = (1 << chrsz) - 1;
          for (var i = 0; i < bin.length * 32; i += chrsz)
              str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & mask);
          return str;
      }
  
      /*
       * Convert an array of little-endian words to a hex string.
       */
      function binl2hex(binarray) {
          var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
          var str = "";
          for (var i = 0; i < binarray.length * 4; i++) {
              str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +
                  hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);
          }
          return str;
      }
  
      /*
       * Convert an array of little-endian words to a base-64 string
       */
      function binl2b64(binarray) {
          var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
          var str = "";
          for (var i = 0; i < binarray.length * 4; i += 3) {
              var triplet = (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16) | (((binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4)) & 0xFF) << 8) | ((binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4)) & 0xFF);
              for (var j = 0; j < 4; j++) {
                  if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;
                  else str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);
              }
          }
          return str;
      }
  
      $.md5 = hex_md5;
  
      return hex_md5;
  });
  

});
;define('label-list', function(require, exports, module) {

  
  /**
      content string  ''  提示内容，用来填充模板
      stayTime    int 1000    提示停留时间，过了这个时间自动隐藏，设置0则不自动隐藏
      type    string  'info'  提示类型，可选info|warn|success
      callback    funtion function(){}    回调函数，第一个参数指示回调类型，目前有两种show|hide
   */
  
  var labelTpl = require('label-list.tpl');
  var labelList = {
      $el: $('#ui-label-panel'),
  
      init: function(data) {
          this._renderData(data);
          this._bindEvent();
      },
  
      _renderData: function(data) {
          this.$el.find('.ui-label-list').html(labelTpl({keywords: data}));
      },
  
      _bindEvent: function() {
  
      }
  };
  
  module.exports = labelList;
  

});
;define('page-menu.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
          _$out_.push('<li> <ul class="page"> '); var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = pageMenu.length; i < len; i++){ loop.index = i; item = pageMenu[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' '); if( loop.index > 0 && loop.index % 8 == 0){
          _$out_.push( ' </ul> </li> <li> <ul class="page"> '); }
          _$out_.push( ' <li class="page-item '); if( loop.first){
          _$out_.push( 'first'); }else{
          _$out_.push( '', loop.index, ''); }
          _$out_.push( '" data-href="',  item.url , '"> <span class="page-item-bd ',  item.icon , '" style="background-image:url(http://placeholder.qiniudn.com/100x100)"></span> <span class="page-item-ft">',  item.title , '</span> </li> '); }
          _$out_.push( ' </ul></li>');
        return _$out_.join('');
      }
  }

});
;define('banner-2.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
           var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = banner2.length; i < len; i++){ loop.index = i; item = banner2[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li class="ui-border-t"> <div class="ui-list-img"> <img src="',  item.image , '" alt="', item.title, '" width="60" height="60"> </div> <div class="ui-list-info"> <p class="ui-nowrap">', item.title, '</p> <p class="ui-nowrap">', item.title, '</p> </div> </li>'); }
          _$out_.push( '');
        return _$out_.join('');
      }
  }

});
;define('banner-3.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
          _$out_.push('<ul class="ui-grid-trisect"> '); var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = banner3.list.length; i < len; i++){ loop.index = i; item = banner3.list[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li> <div class="ui-border"> <div class="ui-grid-trisect-img"> <a href="',  item.url , '"> <img src="',  item.image , '" alt=""> </a> </div> <div> <h4 class="ui-nowrap-multi">',  item.title , '</h4> </div> </div> </li> '); }
          _$out_.push( '</ul>');
        return _$out_.join('');
      }
  }

});
;define('slider.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
           var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = slider.length; i < len; i++){ loop.index = i; item = slider[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li> <a href="',  item.url , '"> <img src="',  item.image , '" alt="',  item.title , '"> </a> </li>'); }
          _$out_.push( '');
        return _$out_.join('');
      }
  }

});
;define('tab-recmend', function(require, exports, module) {

  
  var listTpl = require('tab-recmend.tpl');
  
  var tips = {
      $el: $('#ui-recmend-list'),
  
      init: function(data) {
  
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          var self = this;
          if(self.$el.data('type')){
              self.$el.html(listTpl({tabRecmend: data}));
          }
          self.$el.next().hide();
      },
  
      _bindEvent: function() {
  
      }
  }
  
  module.exports = tips;
  

});
;define('tab-more', function(require, exports, module) {

  
  /**
      content string  ''  提示内容，用来填充模板
      stayTime    int 1000    提示停留时间，过了这个时间自动隐藏，设置0则不自动隐藏
      type    string  'info'  提示类型，可选info|warn|success
      callback    funtion function(){}    回调函数，第一个参数指示回调类型，目前有两种show|hide
   */
  var moreTpl = require('tab-more.tpl');
  
  var tips = {
      $el: $('#ui-more-list'),
  
      init: function(data) {
          if(window.r){
              this._renderData(data);
          }
          this._bindEvent();
      },
  
      _renderData: function(data) {
          var self = this;
  
          if(self.$el.data('type')){
              self.$el.html(moreTpl({tabMore: data}));
          }
          self.$el.next().hide();
      },
  
  
      _bindEvent: function() {
          
      }
  }
  
  module.exports = tips;
  
  

});
;define('panel-3.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
          _$out_.push('<h2 class="ui-arrowlink" data-href="',  panel3.url , '"> ',  panel3.title , '<span class="ui-panel-subtitle">',  panel3.total || 0 , '条</span></h2><ul class="ui-grid-trisect"> '); var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = panel3.list.length; i < len; i++){ loop.index = i; item = panel3.list[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li> <div class="ui-border"> <div class="ui-grid-trisect-img"> <a href="',  item.url , '"> <img src="',  item.image , '" alt=""> </a> </div> <div> <h4 class="ui-nowrap-multi">',  item.title , '</h4> <h5 class="ui-nowrap">',  item.desc , '</h5> </div> </div> </li> '); }
          _$out_.push( '</ul>');
        return _$out_.join('');
      }
  }

});
;define('label-list.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
           var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = keywords.length; i < len; i++){ loop.index = i; item = keywords[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <label class="ui-label">', item, '</label>'); }
          _$out_.push( '<!-- <div class="ui-label-list"> <label class="ui-label-s">金庸</label> <label class="ui-label-s">功夫</label> <label class="ui-label-s">悬疑</label> <label class="ui-label-s">盗墓笔记</label> <label class="ui-label-s">欢乐谷</label></div> -->');
        return _$out_.join('');
      }
  }

});
;define('tab-recmend.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
           var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = tabRecmend.list.length; i < len; i++){ loop.index = i; item = tabRecmend.list[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li class="ui-border-t" data-href="',  item.url , '"> <div class="ui-list-img"> <a href="',  item.url , '"> <img src="',  item.image , '" alt="',  item.title , '" width="90" height="70"> </a> </div> <div class="ui-list-info"> <h4 class="ui-nowrap">',  item.title , '</h4> <p class="ui-nowrap">',  item.desc , '</p> </div> </li>'); }
          _$out_.push( '');
        return _$out_.join('');
      }
  }

});
;define('tab-more.tpl', function(require, exports, module) {

  return  function (it, opt) {
      it = it || {};
      with(it) {
          var _$out_= [];
           var loop = {index: 0, first: true};var item;
   for ( var i = 0 ,len = tabMore.list.length; i < len; i++){ loop.index = i; item = tabMore.list[i]; if(loop.index === 0){ loop.first === true;}else{ loop.first = false; }
          _$out_.push( ' <li class="ui-border-t" data-href="item.url"> <div class="ui-list-img"> <img src="',  item.image , '" alt="',  item.title , '" width="90" height="70"> </div> <div class="ui-list-info"> <h4>',  item.title , '</h4> </div> </li>'); }
          _$out_.push( '');
        return _$out_.join('');
      }
  }

});
